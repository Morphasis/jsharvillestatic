<div class="container">
  <div class="row">
    <div class="col-sm-3">

    </div>
    <div class="col-sm-9 hex-header">
      <h2>Display every hexadecimal code in html</h2>
    </div>
    <div class="clearfix"></div>
      <p>
        This is just a sample of all the possible colors because if i displayed all of them it would crash the page.<br />
        This was a small test project that i wanted to see if anyone had done it before. Nobody had that i could see so i went at it.<br />
        I came up with a few terrible solutions and eventually i ased this <a href="http://stackoverflow.com/questions/36253884/how-to-get-every-valid-hex-code-in-javascript">question</a> on stack overflow. Here is a breakdown of the result.
      </p>
      <div class="col-sm-9">
        Code Block:
      </div>
      <div class="col-sm-3">
        Result:
      </div>
      <div class="code-block col-sm-9">
        <div>
          <xmp>
            app.directive 'randomColor', () ->
              link: (scope) ->
                $cv = $('#colorvomit')
                col = parseInt('111', 16)
                while col <= parseInt('fff', 16)
                  hex = col.toString(16)
                  $cv.append '<span style="background-color:#' + hex + ';"> &nbsp; </span>'
                  col++
          </xmp>
        </div>
      </div>
      <div class="color-result col-sm-3">
        <div random-color>
          <span class="randcol"></span>
          <div id=colorvomit></div>
        </div>
      </div>
      <div class="row">
        <div class="col-xs-12">
          <h3>
            Step by step breakdown: <br />
          </h3>
          <p>
            <span style="border: 1px solid lightgrey;">$cv = $('#colorvomit')</span> is a jquery kind of bind between the content with the id of colorvomit and the name $cv. <br />
            <span style="border: 1px solid lightgrey;">col = parseInt('111', 16)</span> So the only "complex" thing here is the parseInt just parses a string and returns an integer. <br />
            In this case it's the number 111 with the radix that sets it to 16 which is a hexadecimal. (refer to other cases of this in while loop) <br />
            The while look is just a when this hex is smaller or equal to this other number run this... <br />
            Then the <span style="border: 1px solid lightgrey;">hex = col.toString(16)</span> makes sure the number is formatted into a string before it's added to the span tag below.
          </p>
          <p>
            The <span style="border: 1px solid lightgrey;">$cv.append</span> means add this content after the <span style="border: 1px solid lightgrey;">$cv</span> so in this case that's the div with the id color vomit <br />
            Notice in the style tag there is a <span style="border: 1px solid lightgrey;">+ hex +</span> which binds the variable into the tag there even though it's in quotes. <br />
            <span style="border: 1px solid lightgrey;">col++</span> then increases the number and runs the while loop again until the max number specified is reached.
          </p>
        </div>
      </div>
    <div class="row">
      <hr />
      <div class="col-sm-3 col-xs-12">
        <button type="button" name="back button" onclick="goBack()" style="border-radius: 2px;" class="btn btn-primary btn-block">Go Back</button>
      </div>
    </div>
  </div>
</div>
<script>
  function goBack() {
      window.history.back();
  }
</script>
